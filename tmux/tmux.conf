# Remap prefix from 'C-b' to 'C-Space'
unbind-key C-b                  # remove bind for C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# reload config file
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"

# Start window numbering at 1
set -g base-index 1

# Set the base index for panes to 1
set -g pane-base-index 1

# Turn off auto rename of windows
set-option -g allow-rename off

# disable wait for ESC and keycodes
set -sg escape-time 0

# Set vi as the default editor
set -g status-keys vi
# Set vi-mode
set-window-option -g mode-keys vi
# begin selection in copy-mode like Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
# yank selection in copy-mode like Vim
#bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi y send-keys -X copy-selection
# comment the preceding line and uncomment the following to yank to X clipboard
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard

# split pane binds (from on tmux-pain-control)
#Split panes horizontally
bind-key | split-window -h -c "#{pane_current_path}"
#Split panes fully horizontally
bind-key \ split-window -fh -c "#{pane_current_path}"
#Split panes vertically
bind-key - split-window -v -c "#{pane_current_path}"
#Split panes fully vertically
bind-key _ split-window -fv -c "#{pane_current_path}"

#Open new window in same path
bind-key c new-window -c "#{pane_current_path}"

#Synchronize pane: type to all panes in same window
bind-key C-x set-window-option synchronize-pane

#Clear screen and history in pane: asks for confirmation
bind-key C-k confirm -p "clear screen and history?" \
    "send-keys -R; clear-history; send-keys C-l"

# Turn on better mouse/drag support
set -g mouse on
# Disable "release mouse drag to copy and exit copy-mode",
# ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# Since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
# This line changes the default binding of MouseDrag1Pane, the only difference
# is we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @plugin 'christoomey/vim-tmux-navigator'
# Restore Clear Screen (C-l) with vim-tmux-navigator installed
bind C-l send-keys 'C-l'
set -g @plugin 'RyanMillerC/better-vim-tmux-resizer'
# Enable better mouse scroll support in Tmux
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @scroll-without-changing-panes "on"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
# Enable copy to clipboard, may not need for iTerm2 on MacOS
#set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Automatically install tmux plugin manager if not installed
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
